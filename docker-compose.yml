services:
  neo4j:
    image: neo4j:4.4.0
    container_name: neo4j
    environment:
      - NEO4J_AUTH=neo4j/test
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4JLABS_PLUGINS='["apoc","n10s"]'  # Changed from NEO4J_PLUGINS
      - NEO4J_dbms_allow_upgrade=true
      - NEO4J_dbms_allow_format_migration=true
    ulimits:
      nofile:
        soft: 40000
        hard: 40000
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - ./neo4j/conf:/var/lib/neo4j/conf
      - ./neo4j/plugins:/plugins  # Changed from /var/lib/neo4j/plugins to match the correct path
      - ./neo4j/data:/data  # Simplified, the original volume binding seemed incorrect
    networks:
      - mimirnet
    
  # elasticsearch:
  #     image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
  #     container_name: elasticsearch
  #     ports:
  #       - 9200:9200
  #     environment:
  #       - discovery.type=single-node
  #     volumes:
  #       - es_data:/usr/share/elasticsearch/data

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.10.2
  #   container_name: kibana
  #   ports:
  #     - 5601:5601
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #   depends_on:
  #     - elasticsearch
      
  
  # dashboard:
  #  build: ./frontend 
  #  container_name: dashboard
  #  ports:
  #    - 8081:80
  #  depends_on:
  #    - neo4j
  #  networks:
  #    - mimirnet

  # zookeeper:
  #   image: wurstmeister/zookeeper
  #   ports:
  #     - 2181:2181
  #   networks:
  #     - mimirnet

  # kafka:
  #   image: wurstmeister/kafka
  #   container_name: kafka_broker
  #   ports:
  #     - 9092:9092
  #   environment:
  #     KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093  # No changes needed here
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  #     KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_CREATE_TOPICS: "MMXU1:1:1,MMXU2:1:1"
  #   depends_on:
  #     - zookeeper
  #   networks:
  #     - mimirnet

  # producer:
  #   build: ./kafka
  #   container_name: kafka_producer
  #   depends_on:
  #     - kafka
  #   environment:
  #     KAFKA_BROKER: kafka:9092
  #     #TOPIC_NAME: measurements
  #   networks:
  #     - mimirnet

networks:
  mimirnet:
    name: mimirnet

volumes:
  neo4j_data:
  dashboard_data:
  es_data: